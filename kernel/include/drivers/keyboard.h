// Copyright (c) 2018 M D
//
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT

#ifndef DRIVER_KEYBOARD_H
#define DRIVER_KEYBOARD_H

#include "type.h"

#define BACKSPACE 0x0E
#define ENTER 0x1C
#define KEYBOARD_BUFFER_SIZE 256

#define SC_MAX 57

enum COMMAND
{
    SET_LEDS = 0xED,
    ECHO = 0xEE,
    GET_SET_CURRENT_SCAN_CODE = 0xF0,
    IDENTIFY_KEYBOARD = 0xF2,
    SET_TYPEMATIC_RATE_DELAY = 0xF3,
    ENABLE_SCANNING = 0xF4,
    DISABLE_SCANNING = 0xF5,
    SET_DEFAULT_PARAMETERS = 0xF6,
    SET_KEYS_TYPEMATIC_AUTOREPEAT_ONLY = 0xF7,
    SET_KEYS_MAKE_RELEASE = 0xF8,
    SET_KEYS_MAKE_ONLY = 0xF9,
    SET_KEYS_TYPEMATIC_AUTOREPEAT_MAKE_RELEASE = 0xFA,
    SET_KEY_TYPEMATIC_AUTOREPEAT_ONLY = 0xFB,
    SET_KEY_MAKE_RELEASE = 0xFC,
    SET_KEY_MAKE_ONLY = 0xFD,
    RESEND_LAST_BYTE = 0xFE,
    RESET_START_SELF_TEST = 0xFF
};

enum RESPONSE
{
    ACKNOWLEDGE = 0xFA,
    RESEND = 0xFE,
    KEY_ERROR = 0x00,
    KEY_ERROR_2 = 0xFF,
    SELF_TEST_PASSED = 0xAA,
    ECHO_RESPONSE = 0xEE,
    SELF_TEST_FAILED = 0xFC,
    SELF_TEST_FAILED_2 = 0xFD
};

static char key_buffer[KEYBOARD_BUFFER_SIZE];

const int scancode[] = {
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
    0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C,
    0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A,
    0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38,
    0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46,
    0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x57,
    0x58, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D,
    0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B,
    0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9,
    0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7,
    0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5,
    0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3,
    0xD7, 0xD8, 0xE0 + 0x10, 0xE0 + 0x19, 0xE0 + 0x1C, 0xE0 + 0x1D, 0xE0 + 0x20,
    0xE0 + 0x21, 0xE0 + 0x22, 0xE0 + 0x2E, 0xE0 + 0x30, 0xE0 + 0x32, 0xE0 + 0x35,
    0xE0 + 0x38, 0xE0 + 0x47, 0xE0 + 0x48, 0xE0 + 0x49, 0xE0 + 0x4B, 0xE0 + 0x4D,
    0xE0 + 0x4F, 0xE0 + 0x50, 0xE0 + 0x51, 0xE0 + 0x52, 0xE0 + 0x53, 0xE0 + 0x5B,
    0xE0 + 0x5C, 0xE0 + 0x5D, 0xE0 + 0x5E, 0xE0 + 0x5F, 0xE0 + 0x63, 0xE0 + 0x65,
    0xE0 + 0x66, 0xE0 + 0x67, 0xE0 + 0x68, 0xE0 + 0x69, 0xE0 + 0x6A, 0xE0 + 0x6B,
    0xE0 + 0x6C, 0xE0 + 0x6D, 0xE0 + 0x90, 0xE0 + 0x99, 0xE0 + 0x9C, 0xE0 + 0x9D,
    0xE0 + 0xA0, 0xE0 + 0xA1, 0xE0 + 0xA2, 0xE0 + 0xA4, 0xE0 + 0xAE, 0xE0 + 0xB0,
    0xE0 + 0xB2, 0xE0 + 0xB5, 0xE0 + 0xB8, 0xE0 + 0xC7, 0xE0 + 0xC8, 0xE0 + 0xC9,
    0xE0 + 0xCB, 0xE0 + 0xCD, 0xE0 + 0xCF, 0xE0 + 0xD0, 0xE0 + 0xD1, 0xE0 + 0xD2,
    0xE0 + 0xD3, 0xE0 + 0xDB, 0xE0 + 0xDC, 0xE0 + 0xDD, 0xE0 + 0xDE, 0xE0 + 0xDF,
    0xE0 + 0xE3, 0xE0 + 0xE3, 0xE0 + 0xE5, 0xE0 + 0xE6, 0xE0 + 0xE7, 0xE0 + 0xE8,
    0xE0 + 0xE9, 0xE0 + 0xEA, 0xE0 + 0xEB, 0xE0 + 0xEC, 0xE0 + 0xED,
    0xE0 + 0x2A + 0xE0 + 0x37, 0xE0 + 0xB7 + 0xE0 + 0xAA,
    0xE1 + 0x1D + 0x45 + 0xE1 + 0x9D + 0xC5};

const char *sc_name[] = {
    "ERROR", "Esc", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=",
    "Backspace", "Tab", "q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "[", "]",
    "Enter", "Lctrl", "a", "s", "d", "f", "g", "h", "j", "k", "l", ";", "'", "`",
    "LShift", "\\", "z", "x", "c", "v", "b", "n", "m", ",", ".", "/", "RShift",
    "Keypad *", "LAlt", "Spacebar"};
const char sc_ascii[] = {'?', '?', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0',
                         '-', '=', '?', '?', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i',
                         'o', 'p', '[', ']', '?', '?', 'a', 's', 'd', 'f', 'g', 'h',
                         'j', 'k', 'l', ';', '\'', '`', '?', '\\', 'z', 'x', 'c', 'v',
                         'b', 'n', 'm', ',', '.', '/', '?', '?', '?', ' '};

void init_keyboard();
char getScancode();
char getchar();

#endif